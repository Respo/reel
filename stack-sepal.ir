{:definitions {"main/dispatch!" ["defn" "dispatch!" ["op" "op-data"] ["let" [["op-id" ["id!"]] ["new-reel" ["reel-updater" "updater" "@reel-ref" "op" "op-data" "op-id"]]] ["reset!" "reel-ref" "new-reel"]]], "main/reel-ref" ["defonce" "reel-ref" ["atom" ["->" "reel-schema" ["assoc" ":initial-store" ["[]"]] ["assoc" ":store" ["[]"]]]]], "comp.task/on-input" ["defn" "on-input" ["task-id"] ["fn" ["e" "dispatch!"] ["dispatch!" ":task/edit" ["[]" "task-id" [":value" "e"]]]]], "main/-main!" ["defn" "-main!" [] ["enable-console-print!"] ["if" ["not" ["empty?" "ssr-stages"]] ["let" [["target" [".querySelector" "js/document" "|#app"]]] ["falsify-stage!" "target" ["render-element" ["comp-container" "@reel-ref" "ssr-stages"] "states-ref"] "dispatch!"]]] ["render-app!"] ["add-watch" "reel-ref" ":gc" ["fn" [] ["gc-states!" "states-ref"]]] ["add-watch" "reel-ref" ":changes" "render-app!"] ["add-watch" "states-ref" ":changes" "render-app!"] ["println" "|app started!"]], "updater/updater" ["defn" "updater" ["store" "op" "op-data" "op-id"] ["case" "op" [":task/add" ["conj" "store" ["{}" [":id" "op-id"] [":done?" "false"] [":text" "op-data"]]]] [":task/remove" ["filterv" ["fn" ["task"] ["not=" [":id" "task"] "op-data"]] "store"]] [":task/toggle" ["mapv" ["fn" ["task"] ["if" ["=" [":id" "task"] "op-data"] ["update" "task" ":done?" "not"] "task"]] "store"]] [":task/edit" ["mapv" ["fn" ["task"] ["let" [[["[]" "task-id" "text"] "op-data"]] ["if" ["=" [":id" "task"] "task-id"] ["assoc" "task" ":text" "text"] "task"]]] "store"]] "store"]], "main/on-jsload!" ["defn" "on-jsload!" [] ["clear-cache!"] ["render-app!"] ["println" "|code update."]], "comp.task/style-done" ["def" "style-done" ["{}" [":width" "32"] [":height" "32"] [":display" ":inline-block"] [":background-color" "colors/attractive"]]], "comp.task/on-toggle" ["defn" "on-toggle" ["task-id"] ["fn" ["e" "dispatch!"] ["dispatch!" ":task/toggle" "task-id"]]], "main/render-app!" ["defn" "render-app!" [] ["let" [["target" [".querySelector" "js/document" "|#app"]]] ["render!" ["comp-container" "@reel-ref"] "target" "dispatch!" "states-ref"]]], "comp.task/comp-task" ["def" "comp-task" ["create-comp" ":task" "render"]], "comp.task/on-remove" ["defn" "on-remove" ["task-id"] ["fn" ["e" "dispatch!"] ["dispatch!" ":task/remove" "task-id"]]], "util/id!" ["defn" "id!" [] ["swap!" "id-ref" "inc"] "@id-ref"], "comp.container/render" ["defn" "render" ["reel"] ["fn" ["state" "mutate!"] ["let" [["store" [":store" "reel"]]] ["div" ["{}" [":style" ["merge" "ui/global"]]] ["comp-todolist" "store"] ["comp-reel" "reel"]]]]], "comp.todolist/on-click" ["defn" "on-click" ["mutate!" "text"] ["fn" ["state" "dispatch!"] ["dispatch!" ":task/add" "text"] ["mutate!" "|"]]], "comp.todolist/render" ["defn" "render" ["tasks"] ["fn" ["state" "mutate!"] ["div" ["{}"] ["div" ["{}"] ["input" ["{}" [":style" "ui/input"] [":event" ["{}" [":input" ["on-input" "mutate!"]]]] [":attrs" ["{}" [":placeholder" "|Task to add..."] [":value" "state"]]]]] ["comp-space" "8" "nil"] ["button" ["{}" [":style" "ui/button"] [":event" ["{}" [":click" ["on-click" "mutate!" "state"]]]]] ["comp-text" "|Add" "nil"]]] ["comp-space" "nil" "8"] ["div" ["{}"] ["->>" "tasks" ["map" ["fn" ["task"] ["[]" [":id" "task"] ["comp-task" "task"]]]]]]]]], "reel/reel-updater" ["defn" "reel-updater" ["updater" "reel" "op" "op-data" "op-id"] ["if" ["string/starts-with?" ["name" "op"] "|reel/"] ["case" "op" [":reel/view" "reel"] [":reel/run" "reel"] ["do" ["println" "|Unknown reel/ op:" "op"] "reel"]] ["->" "reel" ["assoc" ":store" ["updater" [":store" "reel"] "op" "op-data" "op-id"]] ["update" ":records" ["fn" ["records"] ["conj" "records" ["[]" "op" "op-data" "op-id"]]]]]]], "comp.task/render" ["defn" "render" ["task"] ["fn" ["state" "mutate!"] ["div" ["{}"] ["div" ["{}" [":style" ["merge" "style-done" ["if" [":done?" "task"] ["{}" [":background-color" "colors/warm"]]]]] [":event" ["{}" [":click" ["on-toggle" [":id" "task"]]]]]]] ["comp-space" "8" "nil"] ["input" ["{}" [":attrs" ["{}" [":value" [":text" "task"]] [":placeholder" "|Content of task"]]] [":event" ["{}" [":input" ["on-input" [":id" "task"]]]]] [":style" "ui/input"]]] ["comp-space" "8" "nil"] ["button" ["{}" [":style" ["merge" "ui/button" ["{}" [":background-color" "colors/irreversible"]]]] [":event" ["{}" [":click" ["on-remove" [":id" "task"]]]]]] ["comp-text" "|Remove" "nil"]]]]], "comp.reel/render" ["defn" "render" ["reel"] ["fn" ["state" "mutate!"] ["div" ["{}"] ["comp-debug" [":store" "reel"]]]]], "comp.todolist/comp-todolist" ["def" "comp-todolist" ["create-comp" ":todolist" "init-input" "update-input" "render"]], "reel/reel-schema" ["def" "reel-schema" ["{}" [":records" ["[]"]] [":initial-store" "nil"] [":store" "nil"] [":viewer" ["{}" [":pointer" "0"] [":tab" ":records"]]] [":stopped?" "false"]]], "util/id-ref" ["def" "id-ref" ["atom" "0"]], "main/ssr-stages" ["def" "ssr-stages" ["let" [["ssr-element" [".querySelector" "js/document" "|#ssr-stages"]] ["ssr-markup" [".getAttribute" "ssr-element" "|content"]]] ["read-string" "ssr-markup"]]], "comp.container/comp-container" ["def" "comp-container" ["create-comp" ":container" "render"]], "comp.reel/comp-reel" ["def" "comp-reel" ["create-comp" ":reel" "render"]], "main/states-ref" ["defonce" "states-ref" ["atom" ["{}"]]]}, :namespaces {"comp.container" ["ns" "reel.comp.container" [":require" ["[]" "hsl.core" ":refer" ["[]" "hsl"]] ["[]" "respo-ui.style" ":as" "ui"] ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "span"]] ["[]" "respo.comp.space" ":refer" ["[]" "comp-space"]] ["[]" "respo.comp.text" ":refer" ["[]" "comp-text"]] ["[]" "reel.comp.reel" ":refer" ["[]" "comp-reel"]] ["[]" "reel.comp.todolist" ":refer" ["[]" "comp-todolist"]]]], "main" ["ns" "reel.main" [":require" ["[]" "respo.core" ":refer" ["[]" "render!" "clear-cache!" "falsify-stage!" "render-element" "gc-states!"]] ["[]" "reel.comp.container" ":refer" ["[]" "comp-container"]] ["[]" "cljs.reader" ":refer" ["[]" "read-string"]] ["[]" "reel.util" ":refer" ["[]" "id!"]] ["[]" "reel.reel" ":refer" ["[]" "reel-schema" "reel-updater"]] ["[]" "reel.updater" ":refer" ["[]" "updater"]]]], "comp.reel" ["ns" "reel.comp.reel" [":require" ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "button"]] ["[]" "hsl.core" ":refer" ["[]" "hsl"]] ["[]" "respo.comp.debug" ":refer" ["[]" "comp-debug"]]]], "reel" ["ns" "reel.reel" [":require" ["[]" "clojure.string" ":as" "string"]]], "util" ["ns" "reel.util"], "updater" ["ns" "reel.updater"], "comp.todolist" ["ns" "reel.comp.todolist" [":require" ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "button" "input"]] ["[]" "respo.comp.text" ":refer" ["[]" "comp-text"]] ["[]" "respo.comp.space" ":refer" ["[]" "comp-space"]] ["[]" "respo-ui.common" ":refer" ["[]" "init-input" "update-input" "on-input"]] ["[]" "respo-ui.style" ":as" "ui"] ["[]" "reel.comp.task" ":refer" ["[]" "comp-task"]]]], "comp.task" ["ns" "reel.comp.task" [":require" ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "input" "button"]] ["[]" "hsl.core" ":refer" ["[]" "hsl"]] ["[]" "respo.comp.text" ":refer" ["[]" "comp-text"]] ["[]" "respo.comp.space" ":refer" ["[]" "comp-space"]] ["[]" "respo-ui.style" ":as" "ui"] ["[]" "respo-ui.style.colors" ":as" "colors"]]]}, :procedures {"main" [["set!" [".-onload" "js/window"] "-main!"]], "comp.reel" [], "reel" [], "util" [], "updater.core" [], "updater" [], "comp.todolist" [], "comp.task" []}, :package "reel"}